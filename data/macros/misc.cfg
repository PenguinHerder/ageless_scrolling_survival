#define SHOW_OBJECTIVES
    [event]
    	name=start
        [objectives]
            side=0
            summary="The lava is going upward, run away from it!"
            note="Notes:
You pay no upkeep for your troops, and earn no gold from villages.
You can get money by capturing enemy keeps or from casual treasures.
Letting a unit be reached by the lava means its immediate death.
You will find special labelled areas during your trip, in which you can heal your units or get random upgrades.

** Created and ported from 1.12 by quequo **

GitHub: https://github.com/PenguinHerder/ageless_scrolling_survival
Support: https://github.com/PenguinHerder/ageless_scrolling_survival/blob/master/support.md"
            [objective]
                description="You hunt down the World Oppressor"
                condition=win
            [/objective]
            [objective]
                description="Death of your troops."
                condition=lose
            [/objective]
        [/objectives]
    [/event]	
#enddef

#define MAP_DESCRIPTION
	map_data="{~add-ons/Ageless_Scrolling_Survival/map/SS_start_init_3.map}"	
    turns=-1
    experience_modifier=80
    random_start_time="yes"
    description="Run away from the lava. Fight through various types of environment against number of enemies, and defeat the Great Oppressor.

This map provides a set of options designed to tailor the game to your mood. You can discover these options by going to “Custom Options” tab. Here comes an overview of these options:

- Map: There are 6 maps available to choose from. Each one provides a unique experience, so make sure you check out all of them! The number in parenthesis denotes the length of the map, ie. the turn at which the World Oppressor is spawned, provided the default lava setting is used.

- Wave Mode: There are several options to choose from, regarding how monsters are spawned. These are:

   * Default (predefined) – standard Ageless Scrolling Survival waves
   * Mirror (same player) – starting from turn 5 each player gets to fight a copy of their own units
   * Mirror (opposite player) – players get to fight copies of the other player’s units (perfect for pvp games)
   * Mirror (alternate) – it’s a mix of the two previous mirror modes that change every 8 turns

Unlike other modes, all mirror modes spawn only the units available to spawn. This means that if Mirror (opposite) is chosen and player A has only 5 lvl3 units, then player B will constantly receive only lvl3 units, which may or may not be considered unbalanced. However these modes are not about the game being balanced but about a race between players. It is also important to note that all mirror modes fallback to default spawns if a player has an insufficient number of units.

   * Random faction – a random AE faction is chosen every 8 turns and only units from this faction are spawned. Important to note is that If a lvl4 unit is meant to be spawned at a given spot, but the current faction doesn’t have any lvl4 units then it fallbacks to the default mode.
   * Ageless random – players get monsters randomly selected from AE pool.

In both Random faction and Ageless random modes units are selected from the expected-unit-level pool meaning that if a level 1 unit is spawned in default mode at given spot then a random level 1 unit will be spawned in these modes.

   * Wheel of Fortune – a fun mode where every 8 turns one mode is chosen randomly


- Difficulty level: There are five levels available to choose from. Starting from beginner, that should be beatable unless you are a really bad player or simply don’t care, going up to hardcore that requires nearly a perfect play and a bit of luck to finish the game.

- Lava pace: This option controls how fast (or slow) the lava approaches. Although default (1 hex every 1 turn) is the most popular choice, every option provides a different game play.

- Lava hold: Allows you to freeze the lava for one turn this many times. Might be helpful when the heat becomes unbearable to withstand.

- Cooperative map (standard only): Removes the wall between players.

- Follow the leader: If selected you must protect your leader at all cost, if he dies, game over. When this option is inactive, every time your leader is killed or dies in lava a new one emerges from your army and all your units must die in order for you to loose.

- Fog mode: If selected, the map is covered in fog and all labels are disabled. Interesting mod – definitely try it out to find out if you like it or not. Might spice up the game if non-default wave mode is played.

- Secret mode (PvP only): If selected, the other player’s side of the map is covered in shroud and you cannot see what he / she is doing until the wall between the players is removed.

- Spawn the World Oppressor (PvP only): If selected, you must defeat the World Oppressor in order to win the game. If disabled, you win when your opponent is defeated.


Good luck and have fun!
quequo"
#enddef

#define UNIFY_OPTION_VARIABLES
    [if]
        [variable]
            name=three_players_game
            equals=yes
        [/variable]
        [then]
            {VARIABLE map_setting $QQ_AESS_3P_map_setting}
            {VARIABLE lava_pace $QQ_AESS_3P_lava_pace}
            {VARIABLE cooperative_map no}
            {VARIABLE difficulty_adjust $QQ_AESS_3P_difficulty_adjust}
            {VARIABLE lose_when_no_leader $QQ_AESS_3P_lose_when_no_leader}
            {VARIABLE fog_mode $QQ_AESS_3P_fog_mode}
			{VARIABLE spawn_wd yes}
			{VARIABLE secret_mode no}
			{VARIABLE lava_hold $QQ_AESS_3P_lava_hold}
			{VARIABLE wave_mode $QQ_AESS_3P_wave_mode}
        [/then]
        [else]
			[if]
				[variable]
					name=pvp_mode
					equals=yes
				[/variable]
				[then]
					{VARIABLE map_setting $QQ_AESS_PVP_map_setting}
					{VARIABLE lava_pace $QQ_AESS_PVP_lava_pace}
					{VARIABLE cooperative_map no}
					{VARIABLE difficulty_adjust $QQ_AESS_PVP_difficulty_adjust}
					{VARIABLE lose_when_no_leader $QQ_AESS_PVP_lose_when_no_leader}
					{VARIABLE fog_mode $QQ_AESS_PVP_fog_mode}
					{VARIABLE spawn_wd $QQ_AESS_PVP_spawn_destroyer}
					{VARIABLE secret_mode $QQ_AESS_PVP_secret_mode}
					{VARIABLE lava_hold $QQ_AESS_PVP_lava_hold}
					{VARIABLE wave_mode $QQ_AESS_PVP_wave_mode}
				[/then]
				[else]
					{VARIABLE map_setting $QQ_AESS_map_setting}
					{VARIABLE lava_pace $QQ_AESS_lava_pace}
					{VARIABLE cooperative_map $QQ_AESS_cooperative_map}
					{VARIABLE difficulty_adjust $QQ_AESS_difficulty_adjust}
					{VARIABLE lose_when_no_leader $QQ_AESS_lose_when_no_leader}
					{VARIABLE fog_mode $QQ_AESS_fog_mode}
					{VARIABLE spawn_wd yes}
					{VARIABLE secret_mode no}
					{VARIABLE lava_hold $QQ_AESS_lava_hold}
					{VARIABLE wave_mode $QQ_AESS_wave_mode}
				[/else]
			[/if]
        [/else]
    [/if]

	{VARIABLE stop_lava_once no}
	{VARIABLE lava_stopped_times 0}

	{VARIABLE xp_factor_change 0}
	[switch]
		variable=difficulty_adjust
		[case]
			value=-2
			{VARIABLE_OP xp_factor_change add -12}
		[/case]
		[case]
			value=-1
			{VARIABLE_OP xp_factor_change add -8}
		[/case]
		[case]
			value=1
			{VARIABLE_OP xp_factor_change add 2}
		[/case]
		[case]
			value=2
			{VARIABLE_OP xp_factor_change add 4}
		[/case]
	[/switch]

    [switch]
        variable=lava_pace
        [case]
            value=fast
            {VARIABLE lava_pace_number 1}
			{VARIABLE_OP xp_factor_change add -20}
        [/case]
        [case]
            value=normal
            {VARIABLE lava_pace_number 3}
        [/case]
        [case]
            value=slow
            {VARIABLE lava_pace_number 5}
			{VARIABLE_OP xp_factor_change add 35}
        [/case]
        [case]
            value=wave120
            {VARIABLE lava_pace_number 3}
        [/case]
        [case]
            value=wave103
            {VARIABLE lava_pace_number 2}
			{VARIABLE_OP xp_factor_change add -5}
        [/case]
        [case]
            value=wave1020
            {VARIABLE lava_pace_number 4}
			{VARIABLE_OP xp_factor_change add 15}
        [/case]
        [case]
            value=wave10100
            {VARIABLE lava_pace_number 6}
			{VARIABLE_OP xp_factor_change add 50}
        [/case]
    [/switch]

    {VARIABLE destroyer_spawned no}
    {VARIABLE destroyer_got_ms no}
	{VARIABLE pvp_wall_removed no}
	{VARIABLE side_a_units_index 0}
	{VARIABLE side_b_units_index 0}
	{VARIABLE current_random_faction $no_text}
	{VARIABLE is_ladder_wave_mode no}
	{VARIABLE is_alternate_wave_mode no}

	[switch]
		variable=wave_mode
		[case]
			value=ladder
			{VARIABLE is_ladder_wave_mode yes}
		[/case]
		[case]
			value=alternate
			{VARIABLE is_alternate_wave_mode yes}
		[/case]
	[/switch]
#enddef

#define SET_XP_FACTOR
	{VARIABLE_OP game_settings[0].xp_factor add $xp_factor_change}
	{CLEAR_VARIABLE xp_factor_change}
#enddef

#define SET_NO_UPKEEP
    [event]
        name=prerecruit
        first_time_only=no
        [object]
            silent=yes
            [filter]
                x,y=$x1,$y1
            [/filter]
            [effect]
                apply_to=loyal
            [/effect]
        [/object]

        {VARIABLE enemy_sides "123456"}
        [if]
            [variable]
                name=enemy_sides
                contains=$unit.side
            [/variable]
            [then]
                [fire_event]
                    name=fresh_enemy
                    [primary_unit]
                        find_in=unit
                    [/primary_unit]
                [/fire_event]
            [/then]
			[else]
				[object]
					silent=yes
					[filter]
						x,y=$x1,$y1
					[/filter]
					[effect]
						apply_to=max_experience
						increase="$game_settings[0].xp_factor|%"
					[/effect]
				[/object]
			[/else]
        [/if]
    [/event]
#enddef

#define SET_FOG
    [if]
        [variable]
            name=fog_mode
            equals=yes
        [/variable]
        [then]
            [modify_side]
                side=7
                fog=yes
            [/modify_side]
            [modify_side]
                side=8
                fog=yes
            [/modify_side]
            [if]
                [variable]
                    name=three_players_game
                    equals=yes
                [/variable]
                [then]
                    [modify_side]
                        side=9
                        fog=yes
                    [/modify_side]
                [/then]
            [/if]
        [/then]
    [/if]
#enddef

#define RUN
    [switch]
        variable=map_setting
        [case]
            value=archipelago
            {ARCHIPELAGO_SPAWN_DESIGN}
            {ARCHIPELAGO_HEALING_AREA_DESIGN}
            {ARCHIPELAGO_RUNE_DESIGN}
            {ARCHIPELAGO_ITEM_DESIGN}
            {ARCHIPELAGO_TREASURE_DESIGN}
            {ARCHIPELAGO_STARTING_DESIGN}
        [/case]
        [case]
            value=standard
            {STANDARD_SPAWN_DESIGN}
            {STANDARD_HEALING_AREA_DESIGN}
            {STANDARD_ITEM_DESIGN}
            {STANDARD_TREASURE_DESIGN}
            {STANDARD_STARTING_DESIGN}
        [/case]
        [case]
            value=mountains
            {MOUNTAINS_SPAWN_DESIGN}
            {MOUNTAINS_HEALING_AREA_DESIGN}
            {MOUNTAINS_RUNE_DESIGN}
            {MOUNTAINS_TREASURE_DESIGN}
            {MOUNTAINS_STARTING_DESIGN}
        [/case]
        [case]
            value=prison
            {PRISON_SPAWN_DESIGN}
            {PRISON_HEALING_AREA_DESIGN}
            {PRISON_RUNE_DESIGN}
            {PRISON_TREASURE_DESIGN}
            {PRISON_ITEM_DESIGN}
            {PRISON_STARTING_DESIGN}
        [/case]
        [case]
            value=forest
            {FOREST_SPAWN_DESIGN}
            {FOREST_HEALING_AREA_DESIGN}
            {FOREST_TREASURE_DESIGN}
            {FOREST_ITEM_DESIGN}
            {FOREST_STARTING_DESIGN}
        [/case]
        [case]
            value=waters
            {WATERS_SPAWN_DESIGN}
            {WATERS_HEALING_AREA_DESIGN}
            {WATERS_TREASURE_DESIGN}
            {WATERS_STARTING_DESIGN}
			{WATERS_RUNE_DESIGN}
			{WATERS_ITEM_DESIGN}
			{WATERS_EXTRA_EVENTS}
        [/case]
    [/switch]

    {TRANSFER_UNITS}
#enddef

#define CLEAR_STUPID_BONUSES
	[store_locations]
		variable=clear_stupid_bonuses_locations
		terrain=_off^_usr,X*^*,M*^*
	[/store_locations]
	{FOREACH clear_stupid_bonuses_locations i}
		[label]
			x=$clear_stupid_bonuses_locations[$i].x
			y=$clear_stupid_bonuses_locations[$i].y
			text=$empty_variable
		[/label]
	{NEXT i}
	{CLEAR_VARIABLE clear_stupid_bonuses_locations}
#enddef

#define SET_LAVA_HOLD_MENU_ITEM
	[set_menu_item]
		id=set_lava_hold_button
		description="Hold the lava for one turn ($lava_hold available)"
		synced=yes
		use_hotkey=no
		[show_if]
			[variable]
				name=lava_hold
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=stop_lava_once
					equals=no
				[/variable]
			[/and]
		[/show_if]
		[command]
			{VARIABLE_OP lava_hold add -1}
			[floating_text]
				x=$game_settings[0].center_x
				y=8
				text="<span color='#ffd5d6' size='large'>!!!STOP LAVA!!!</span>"
			[/floating_text]
			{VARIABLE stop_lava_once yes}
			[terrain]
				x=0-100
				y=19-21
				[and]
					terrain=Qlf
				[/and]
				terrain=Ai
			[/terrain]
			[set_menu_item]
				id=set_lava_hold_button
				description="Hold the lava for one turn ($lava_hold available)"
			[/set_menu_item]
		[/command]
	[/set_menu_item]
	[set_menu_item]
		id=set_lava_hold_button_info
		description="Lava will not progress"
		[show_if]
			[variable]
				name=stop_lava_once
				equals=yes
			[/variable]
		[/show_if]
		[command]
		[/command]
	[/set_menu_item]
#enddef

#define RANDOMIZE_WAVE_MODE
	[if]
		[variable]
			name=is_ladder_wave_mode
			equals=yes
		[/variable]
		[then]
			{VARIABLE last_wave_mode $wave_mode}
			[while]
				[variable]
					name=wave_mode
					equals=$last_wave_mode
				[/variable]
				[do]
					[set_variable]
						name=wave_mode
						rand="default,same,opposite,faction,random"
					[/set_variable]
				[/do]
			[/while]

			[chat]
				speaker="Ageless Scrolling Survival v.$ass_version"
				message="New wave mode: $wave_mode"
			[/chat]
		[/then]
	[/if]

	[if]
		[variable]
			name=is_alternate_wave_mode
			equals=yes
		[/variable]
		[then]
			[if]
				[variable]
					name=wave_mode
					equals=same
				[/variable]
				[then]
					{VARIABLE wave_mode "opposite"}
				[/then]
				[else]
					{VARIABLE wave_mode "same"}
				[/else]
			[/if]

			[chat]
				speaker="Ageless Scrolling Survival v.$ass_version"
				message="New wave mode: $wave_mode"
			[/chat]
		[/then]
	[/if]
#enddef

#define RANDOMIZE_FACTION_WAVE_MODE
	[if]
		[variable]
			name=wave_mode
			equals=faction
		[/variable]
		[then]
			{VARIABLE last_random_faction $current_random_faction}
			[while]
				[variable]
					name=current_random_faction
					equals=$last_random_faction
				[/variable]
				[do]
					[set_variable]
						name=current_random_faction
		#				rand="RE Aquanas,RE Chevalier,RE Dardo,RE Dark Elves,RE Dwarves,RE Elyser,RE Forestdwarves,RE Forestfolk,RE Luz,RE Marashy,RE Mountaintribe,RE Necromancers,RE Regis,RE Trarashy,RE Vixens,MiE Thelian,MiE Centaurs,MiE Sylvans,MiE Vampires,ELE Horned Skeletons,ELE Fallen,ELE Vikings,ELE Centaurs,AE Dark Legion,Deep Elves,AE Desert Elves,AE Frozen,AE Steelhive,AE Yokai,Archaic Despair,Archaic Khthon,Archaic Menagerie,Archaic Northern Orcs,Archaic Phantom,Archaic Primeval,Archaic South Seas,Archaic Ukians,BEEM Anakes,BEEM Calydonians,BEEM Wood Warriors,Default Drakes,Default Khalifate,Default Undead,EE Undead,EE Dwarves,Default Knalgan Alliance,EE Loyalists,Default Northerners,Default Rebels,EE Chaos,EE Dark Elves,EE Monsters,EE Outlaws,EFM Dalefolk,EFM Darklanders,EFM Freemen,EFM Highlanders,EFM Imperialists,EFM Pygmies,EFM Sea States,EFM Whites,EOM Celestials,EOM Devlings,EOM Therians,EOM Vampires,EOM Wargs,EOM Windsong,EOS Eltireans,EOS Eventide,EOS Free Saurians,EOS Minotaurs,EOS Triththa,EoC Aragwaithi,EoC Chaos Empire,EoC Quenoth Elves,EoC Sylvans,EoC Wild Humans,EoC Elementals,EoMa Summoners,EoMa Barbarians,EoMa Dark Blood Alliance,EoMa Destroyers,EoMa Kharos,EoMa Runemasters,EoMa Sky Kingdom,EoMa Tharis,EotF Brungar,EotF Nordhris,EotF Welkin,Feudal Ceresian League,Feudal Clockwork Dwarves,Feudal High Elves,Feudal Orcish Khaganates,Imperial Arendians,Imperial Cavernei,Imperial Issaelfr,Imperial Lavinian Legion,Imperial Marauders,Imperial Orcei Gladiatores,Imperial Sidhe,ME Avians,ME Blight,ME Cult,Emperors Guard,ME Enchanters,ME Equestrians,ME Fanatics,ME Highlanders,ME Hive,ME Holy Order,ME Infernai,ME Mercenaries,ME Oracles,ME Refugees,ME Slavers,ME Tribalists"
						rand="RE Aquanas,RE Chevalier,RE Dardo,RE Dark Elves,RE Dwarves,RE Elyser,RE Forestdwarves,RE Forestfolk,RE Luz,RE Marashy,RE Mountaintribe,RE Necromancers,RE Regis,RE Trarashy,RE Vixens,MiE Thelian,MiE Centaurs,MiE Sylvans,MiE Vampires,ELE Horned Skeletons,ELE Fallen,ELE Vikings,ELE Centaurs,AE Dark Legion,Deep Elves,AE Desert Elves,AE Frozen,AE Steelhive,AE Yokai,Archaic Despair,Archaic Khthon,Archaic Menagerie,Archaic Northern Orcs,Archaic Phantom,Archaic Primeval,Archaic South Seas,Archaic Ukians,BEEM Anakes,BEEM Calydonians,BEEM Wood Warriors"
					[/set_variable]
				[/do]
			[/while]

			[chat]
				speaker="Ageless Scrolling Survival v.$ass_version"
				message="New spawning faction: $current_random_faction"
			[/chat]
		[/then]
	[/if]
#enddef

#define UPDATE_RANDOM_WAVES
	{VARIABLE update_waves_turn_number $turn_number}
	[set_variable]
		name=update_waves_turn_number
		modulo=8
	[/set_variable]
	
	[if]
		[variable]
			name=update_waves_turn_number
			numerical_equals=1
		[/variable]
		[then]
			{RANDOMIZE_WAVE_MODE}
			{RANDOMIZE_FACTION_WAVE_MODE}
		[/then]
	[/if]
#enddef

#define TELEPORT_LEADERS
	[if]
		[have_unit]
			side=7
			can_recruit=yes
		[/have_unit]
		[then]
			[store_unit]
				variable=leader_unit
				kill=yes
				[filter]
					side=7
					can_recruit=yes
					[not]
						type="Orcish Grunt"
					[/not]
				[/filter]
			[/store_unit]
			[unstore_unit]
				variable=leader_unit
				x,y=$game_settings[0].start_a_x,$game_settings[0].start_a_y
			[/unstore_unit]
			[object]
				silent=yes
				[filter]
					x,y=$game_settings[0].start_a_x,$game_settings[0].start_a_y
				[/filter]
				[effect]
					apply_to=max_experience
					increase="$game_settings[0].xp_factor|%"
				[/effect]
			[/object]
		[/then]
	[/if]
    {CLEAR_VARIABLE leader_unit}

	[if]
		[have_unit]
			side=8
			can_recruit=yes
		[/have_unit]
		[then]
			[store_unit]
				variable=leader_unit
				kill=yes
				[filter]
					side=8
					can_recruit=yes
					[not]
						type="Orcish Grunt"
					[/not]
				[/filter]
			[/store_unit]
			[unstore_unit]
				variable=leader_unit
				x,y=$game_settings[0].start_b_x,$game_settings[0].start_b_y
			[/unstore_unit]
			[object]
				silent=yes
				[filter]
					x,y=$game_settings[0].start_b_x,$game_settings[0].start_b_y
				[/filter]
				[effect]
					apply_to=max_experience
					increase="$game_settings[0].xp_factor|%"
				[/effect]
			[/object]
		[/then]
	[/if]
    {CLEAR_VARIABLE leader_unit}

	[if]
		[have_unit]
			side=9
			can_recruit=yes
		[/have_unit]
		[then]
			[store_unit]
				variable=leader_unit
				kill=yes
				[filter]
					side=9
					can_recruit=yes
					[not]
						type="Orcish Grunt"
					[/not]
				[/filter]
			[/store_unit]
			[unstore_unit]
				variable=leader_unit
				x,y=$game_settings[0].start_c_x,$game_settings[0].start_c_y
			[/unstore_unit]
			[object]
				silent=yes
				[filter]
					x,y=$game_settings[0].start_c_x,$game_settings[0].start_c_y
				[/filter]
				[effect]
					apply_to=max_experience
					increase="$game_settings[0].xp_factor|%"
				[/effect]
			[/object]
		[/then]
	[/if]
    {CLEAR_VARIABLE leader_unit}
#enddef
