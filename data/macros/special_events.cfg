#define GIVE_GOLD_EVENT
	[event]
		name=gold_given
		first_time_only=no
		# for synchronisation only
	[/event]
#enddef

#define NEW_ENEMY_EVENT
    [event]
        name=fresh_enemy
        first_time_only=no
        {VARIABLE bonus_damage 0}
        {VARIABLE bonus_strikes 0}
        {VARIABLE use_max_extra_dmg 0}
        {VARIABLE use_hp_factor 0}
        {VARIABLE use_extra_hp 0}
        {VARIABLE use_hp_percentage 0}
        {VARIABLE left_side "123"}

        [if]
            [variable]
                name=left_side
                contains=$unit.side
            [/variable]
            [or]
                [variable]
                    name=unit.id
                    equals="World_Eater"
                [/variable]
                [and]
                    [variable]
                        name=players[0].max_extra_dmg
                        greater_than=$players[1].max_extra_dmg
                    [/variable]
                [/and]
            [/or]
            [then]
                {VARIABLE use_hp_factor $players[0].base_hp_factor}
                {VARIABLE use_extra_hp $players[0].extra_hp}
                {VARIABLE use_extra_dmg $players[0].extra_dmg}
                {VARIABLE use_extra_strikes $players[0].extra_strikes}
                {VARIABLE use_max_extra_dmg $players[0].max_extra_dmg}
                {VARIABLE use_hp_percentage $players[0].total_hp}
                {VARIABLE_OP use_hp_percentage divide $players[0].total_max_hp}
				{VARIABLE use_unit_points $players[0].alive_units}
				{VARIABLE use_progress_factor $players[0].progress_factor}
            [/then]
            [else]
                {VARIABLE use_hp_factor $players[1].base_hp_factor}
                {VARIABLE use_extra_hp $players[1].extra_hp}
                {VARIABLE use_extra_dmg $players[1].extra_dmg}
                {VARIABLE use_extra_strikes $players[1].extra_strikes}
                {VARIABLE use_max_extra_dmg $players[1].max_extra_dmg}
                {VARIABLE use_hp_percentage $players[1].total_hp}
                {VARIABLE_OP use_hp_percentage divide $players[1].total_max_hp}
				{VARIABLE use_unit_points $players[1].alive_units}
				{VARIABLE use_progress_factor $players[1].progress_factor}
            [/else]
        [/if]
        {VARIABLE is_boss no}
        [if]
            [variable]
                name=unit.id
                equals="World_Eater"
            [/variable]
            [then]
                {VARIABLE is_boss yes}
            [/then]
        [/if]
        [lua]
            code = << 
                local is_boss = wesnoth.get_variable "is_boss"
                local extra_hp = wesnoth.get_variable "use_extra_hp"
                local extra_dmg = wesnoth.get_variable "use_extra_dmg"
                local extra_strikes = wesnoth.get_variable "use_extra_strikes"
                local max_extra_dmg = wesnoth.get_variable "use_max_extra_dmg"
                local hp_factor = wesnoth.get_variable "use_hp_factor"
                local hp_percentage = wesnoth.get_variable "use_hp_percentage"
                local current_turn = wesnoth.get_variable "turn_number"
				local unit_points = wesnoth.get_variable "use_unit_points"
				local progress_factor = wesnoth.get_variable "use_progress_factor"

                local bonus_ratio = get_bonus_ratio_from_max_extra_dmg(max_extra_dmg)
                local dmg_bonus = get_dmg_bonus_from_extra_hp(extra_hp)
                local strikes_bonus = get_strikes_bonus_from_extra_hp(extra_hp)
                local enemy_hp_bonus = get_hp_bonus_from_extra_dmg(extra_dmg, extra_strikes)
                local turn_hp_bonus = get_hp_bonus_from_turn_number(current_turn, progress_factor)
                local handicap = get_bonus_handicap_from_hp_percentage(hp_percentage)
				local points_hp_bonus = get_hp_bonus_from_unit_points(unit_points)
                
                dmg_bonus = dmg_bonus * bonus_ratio * handicap
                strikes_bonus = strikes_bonus * bonus_ratio * handicap
                hp_factor = hp_factor + (points_hp_bonus + enemy_hp_bonus) * bonus_ratio * handicap + turn_hp_bonus

                if is_boss then
                    dmg_bonus = dmg_bonus + 40
                    hp_factor = hp_factor + 15
                end

                wesnoth.set_variable("use_hp_factor", hp_factor)
                wesnoth.set_variable("bonus_damage", dmg_bonus)
                wesnoth.set_variable("bonus_strikes", strikes_bonus)
            >>
        [/lua]

        [object]
            silent=yes
            [filter]
                find_in=unit
            [/filter]
            [effect]
                apply_to=hitpoints
                increase_total="$use_hp_factor|%"
                increase="$use_hp_factor|%"
            [/effect]
            [effect]
                apply_to=attack
                increase_damage="$bonus_damage|%"
                increase_attacks="$bonus_strikes|%"
            [/effect]
        [/object]

		[if]
			[variable]
				name=wave_mode
				equals="random"
			[/variable]
			[or]
				[variable]
					name=wave_mode
					equals="faction"
				[/variable]
			[/or]
			[then]
				[if]
					[variable]
						name=unit.movement_costs.flat
						greater_than=2
					[/variable]
					[then]
						[object]
							silent=yes
							[filter]
								find_in=unit
							[/filter]
							[effect]
								apply_to=movement_costs
								replace=yes
								[movement_costs]
									flat=2
								[/movement_costs]
							[/effect]
							[effect]
								apply_to=defense
								replace=no
								[defense]
									flat=70
								[/defense]
							[/effect]
						[/object]
					[/then]
				[/if]
			[/then]
		[/if]

        {CLEAR_VARIABLE use_hp_factor}
        {CLEAR_VARIABLE left_side}
        {CLEAR_VARIABLE bonus_damage}
        {CLEAR_VARIABLE bonus_strikes}
        {CLEAR_VARIABLE use_hp_factor}
        {CLEAR_VARIABLE use_hp_ratio}
        {CLEAR_VARIABLE use_hp_percentage}
    [/event]
#enddef

#define SAVE_UNIT_EVENT
    [event]
        name=saved_unit_speaking
        first_time_only=no
        [message]
            speaker=unit
            message="Aaaawwww... What happened? Who are you? For how long have I been turned into a stone? May I join your horde?"
        [/message]
    [/event]
#enddef

#define SAVE_UNIT TYPE MOVES
    [event]
        name="moveto"
        first_time_only="no"
        [filter]
            side=7,8,9
            [filter_adjacent]
                side=10
                type={TYPE}
            [/filter_adjacent]
        [/filter]
        [store_unit]
            [filter]
                side=10
                type={TYPE}
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/filter]
            mode=append
            variable=joining_unit
        [/store_unit]
        [fire_event]
            name=saved_unit_speaking
            [primary_unit]
                x,y=$joining_unit.x,$joining_unit.y
            [/primary_unit]
        [/fire_event]

		{FOREACH joining_unit.modifications.trait i}
			[if]
				[variable]
					name=joining_unit.modifications.trait[$i].id
					equals="quick"
				[/variable]
				[then]
					[set_variable]
						name=helper_is_quick
						value="yes"
					[/set_variable]
				[/then]
			[/if]
		{NEXT i}

		{VARIABLE joining_unit_moves {MOVES}}

		[if]
			[variable]
				name=helper_is_quick
				equals="yes"
			[/variable]
			[then]
				{VARIABLE_OP joining_unit_moves add 1}
			[/then]
		[/if]
		{CLEAR_VARIABLE helper_is_quick}

		[set_variable]
            name=joining_unit.max_moves
            value=$joining_unit_moves
        [/set_variable]

		[set_variable]
            name=joining_unit.status.petrified
            value=no
        [/set_variable]

        [set_variable]
            name=joining_unit.side
            value=$unit.side
        [/set_variable]
        [kill]
            x=$joining_unit.x
            y=$joining_unit.y
        [/kill]
        [unstore_unit]
            variable=joining_unit
        [/unstore_unit]
        [object]
            silent="yes"
            [filter]
                x=$joining_unit.x
                y=$joining_unit.y
            [/filter]
            [effect]
                apply_to=loyal
            [/effect]
        [/object]
        {CLEAR_VARIABLE joining_unit}
    [/event]
#enddef

#define SPAWN_WORLD_DESTROYER
    [if]
        [variable]
            name=virtual_turn_number
            greater_than_equal_to=$game_settings[0].destroyer_round
        [/variable]
        [and]
            [variable]
                name=destroyer_spawned
                equals=no
            [/variable]
        [/and]
		[and]
			[variable]
				name=spawn_wd
				equals=yes
			[/variable]
		[/and]
        [then]
            {VARIABLE destroyer_hitpoints $game_settings[0].destroyer_hp}
            [switch]
                variable=lava_pace
                [case]
                    value=fast
                    {VARIABLE_OP destroyer_hitpoints multiply 0.45}
                [/case]
                [case]
                    value=slow
                    {VARIABLE_OP destroyer_hitpoints multiply 1.38}
                [/case]
                [case]
                    value=wave120
                    {VARIABLE_OP destroyer_hitpoints multiply 0.92}
                [/case]
                [case]
                    value=wave103
                    {VARIABLE_OP destroyer_hitpoints multiply 0.68}
                [/case]
                [case]
                    value=wave1020
                    {VARIABLE_OP destroyer_hitpoints multiply 1.14}
                [/case]
                [case]
                    value=wave10100
                    {VARIABLE_OP destroyer_hitpoints multiply 1.48}
                [/case]
            [/switch]
            [sound]
                name=lightning.ogg
            [/sound]
            {FLASH_RED (
                [unit]
                    type=$game_settings[0].destroyer_type
                    name="World Oppressor"
                    id="World_Eater"
                    x=$game_settings[0].destroyer_x
                    y=$game_settings[0].destroyer_y
                    side=4
                    max_moves=0
                    max_hitpoints=$destroyer_hitpoints
                [/unit]

                [fire_event]
                    name=fresh_enemy
                    [primary_unit]
                        x=$game_settings[0].destroyer_x
                        y=$game_settings[0].destroyer_y
                    [/primary_unit]
                [/fire_event]
            )}
            {VARIABLE destroyer_spawned yes}
        [/then]
    [/if]
    [if]
        [variable]
            name=virtual_turn_number
            greater_than_equal_to=$game_settings[0].destroyer_ms_round
        [/variable]
        [and]
            [variable]
                name=destroyer_got_ms
                equals=no
            [/variable]
        [/and]
        [then]
            [sound]
                name=lightning.ogg
            [/sound]
            {FLASH_RED (
                [object]
                    silent=yes
                    [filter]
                        id="World_Eater"
                    [/filter]
                    [effect]
                        apply_to=movement
                        set=$game_settings[0].destroyer_mp
                    [/effect]
                [/object]
				{VARIABLE guards_ms $game_settings[0].destroyer_mp}
				{VARIABLE_OP guards_ms add -1}

				[store_unit]
					variable=units_to_give_ms
					mode=append
					[filter]
						side=1,2,4,5 # avoid accidental giving ms to healer units if the happen to be that close to the end of the map
						[and]
							[filter_wml]
								max_moves=0
							[/filter_wml]
						[/and]
					[/filter]
				[/store_unit]
				{FOREACH units_to_give_ms s}
					[object]
						silent=yes
						[filter]
							x=$units_to_give_ms[$s].x
							y=$units_to_give_ms[$s].y
						[/filter]
						[effect]
							apply_to=movement
							set=$guards_ms
						[/effect]
					[/object]
				{NEXT s}
				{CLEAR_VARIABLE units_to_give_ms}
				{VARIABLE destroyer_got_ms yes}
            )}
        [/then]
    [/if]
#enddef

#define PVP_REMOVE_WALL
    [if]
        [variable]
            name=virtual_turn_number
            greater_than_equal_to=$game_settings[0].pvp_wall
        [/variable]
        [and]
			[variable]
				name=pvp_mode
				equals=yes
			[/variable]
        [/and]
		[and]
            [variable]
                name=pvp_wall_removed
                equals=no
            [/variable]
		[/and]
        [then]
            {VARIABLE mask_file $pvp_mask_file}
            {VARIABLE pvp_wall_removed yes}
        [/then]
    [/if]
#enddef

