#define PREPARE_BASE_ALIVE_UNITS
	{VARIABLE initial_alive_units 0}
    [switch]
        variable=lava_pace
        [case]
            value=fast
            {VARIABLE initial_alive_units -4}
        [/case]
        [case]
            value=slow
            {VARIABLE initial_alive_units 6}
        [/case]
        [case]
            value=wave103
            {VARIABLE initial_alive_units -1}
        [/case]
        [case]
            value=wave1020
            {VARIABLE initial_alive_units 2}
        [/case]
        [case]
            value=wave10100
            {VARIABLE initial_alive_units 8}
        [/case]
    [/switch]
#enddef

#define COUNT_UNITS
    [store_unit]
        variable=all_units
        mode=append
        [filter]
            [not]
                id=World_Eater
            [/not]
        [/filter]
    [/store_unit]

	{RESET_GUTTER_VARIABLE}

    {VARIABLE human_sides "789"}

    {VARIABLE helper_player_temp 0}
    {VARIABLE helper_player_extra_hp 0}
    {VARIABLE helper_player_extra_dmg 0}
    {VARIABLE helper_player_extra_strikes 0}
    {VARIABLE helper_player_max_extra_dmg 0}
    {VARIABLE helper_player_total_max_hp 1}
    {VARIABLE helper_player_total_hp 0}
    
    {FOREACH all_units k}
        {VARIABLE extra_hp_points 0}
        [lua]
            code = <<
				local key = wesnoth.get_variable "k"
				local unit_key = "all_units[" .. tostring(tonumber(key)) .. "]"
                local hppoints = wesnoth.get_variable(unit_key .. ".max_hitpoints")
                local type = wesnoth.get_variable(unit_key .. ".type")
                local extrapoints = get_points_from_unit_hp(hppoints)
                extrapoints = extrapoints + get_extra_points_from_unit_type(type)
                wesnoth.set_variable("extra_hp_points", extrapoints)
            >>
        [/lua]
        
        {VARIABLE extra_hp 0}
        {VARIABLE extra_dmg 0}
        {VARIABLE extra_strikes 0}
        {VARIABLE max_extra_dmg 0}
        {VARIABLE total_max_hp 0}
        {VARIABLE total_hp 0}
        [if]
            [variable]
                name=human_sides
                contains=$all_units[$k].side
            [/variable]
            [then]
                [store_unit_type]
                    type=$all_units[$k].type
                    variable=examined_unit
                [/store_unit_type]
                {VARIABLE total_max_hp $all_units[$k].max_hitpoints}
                {VARIABLE total_hp $all_units[$k].hitpoints}

                {VARIABLE extra_hp $all_units[$k].max_hitpoints}
                {VARIABLE_OP extra_hp sub $examined_unit.hitpoints}

                {VARIABLE extra_dmg $all_units[$k].attack[0].damage}
                {VARIABLE_OP extra_dmg sub $examined_unit.attack[0].damage}
                {VARIABLE extra_strikes $all_units[$k].attack[0].number}
                {VARIABLE_OP extra_strikes sub $examined_unit.attack[0].number}

                [if]
                    [variable]
                        name=extra_hp
                        less_than=8
                    [/variable]
                    [then]
                        {VARIABLE extra_hp 0}
                    [/then]
                [/if]

                [if]
                    [variable]
                        name=extra_dmg
                        less_than=2 # strong trait and also its not that important
                    [/variable]
                    [then]
                        {VARIABLE extra_dmg 0}
                    [/then]
                [/if]

                [if]
                    [variable]
                        name=extra_strikes
                        less_than=0 # swarm
                    [/variable]
                    [then]
                        {VARIABLE extra_strikes 0}
                    [/then]
                [/if]

                {VARIABLE max_extra_dmg $extra_dmg}
                {VARIABLE_OP max_extra_dmg add 1}
                {VARIABLE temp_strikes $extra_strikes}

                [if]
                    [variable]
                        name=temp_strikes
                        less_than=1
                    [/variable]
                    [then]
                        {VARIABLE temp_strikes 1}
                    [/then]
                [/if]

                {VARIABLE_OP max_extra_dmg multiply $temp_strikes}

                {CLEAR_VARIABLE temp_strikes}
                {CLEAR_VARIABLE examined_unit}
            [/then]
        [/if]

        [switch]
            variable=all_units[$k].side
            [case]
                value=1
                {VARIABLE_OP gutter[0].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=2
                {VARIABLE_OP gutter[0].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=3
                {VARIABLE_OP gutter[0].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=4
                {VARIABLE_OP gutter[1].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=5
                {VARIABLE_OP gutter[1].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=6
                {VARIABLE_OP gutter[1].alive_enemies add $all_units[$k].level}
            [/case]
            [case]
                value=7
                {VARIABLE_OP gutter[0].alive_units add $all_units[$k].level}
                {VARIABLE_OP gutter[0].alive_units add $extra_hp_points}
                {VARIABLE_OP gutter[0].extra_hp add $extra_hp}
                {VARIABLE_OP gutter[0].extra_dmg add $extra_dmg}
                {VARIABLE_OP gutter[0].extra_strikes add $extra_strikes}
                {VARIABLE_OP gutter[0].total_max_hp add $total_max_hp}
                {VARIABLE_OP gutter[0].total_hp add $total_hp}
                [if]
                    [variable]
                        name=gutter[0].max_extra_dmg
                        less_than=$max_extra_dmg
                    [/variable]
                    [then]
                        {VARIABLE gutter[0].max_extra_dmg $max_extra_dmg}
                    [/then]
                [/if]
            [/case]
            [case]
                value=8
                {VARIABLE_OP gutter[1].alive_units add $all_units[$k].level}
                {VARIABLE_OP gutter[1].alive_units add $extra_hp_points}
                {VARIABLE_OP gutter[1].extra_hp add $extra_hp}
                {VARIABLE_OP gutter[1].extra_dmg add $extra_dmg}
                {VARIABLE_OP gutter[1].extra_strikes add $extra_strikes}
                {VARIABLE_OP gutter[1].total_max_hp add $total_max_hp}
                {VARIABLE_OP gutter[1].total_hp add $total_hp}
                [if]
                    [variable]
                        name=gutter[1].max_extra_dmg
                        less_than=$max_extra_dmg
                    [/variable]
                    [then]
                        {VARIABLE gutter[1].max_extra_dmg $max_extra_dmg}
                    [/then]
                [/if]
            [/case]
            [case]
                value=9
                {VARIABLE_OP helper_player_temp add $all_units[$k].level}
                {VARIABLE_OP helper_player_temp add $extra_hp_points}
                {VARIABLE_OP helper_player_extra_hp add $extra_hp}
                {VARIABLE_OP helper_player_extra_dmg add $extra_dmg}
                {VARIABLE_OP helper_player_extra_strikes add $extra_strikes}
                {VARIABLE_OP helper_player_total_max_hp add $total_max_hp}
                {VARIABLE_OP helper_player_total_hp add $total_hp}
                [if]
                    [variable]
                        name=helper_player_max_extra_dmg
                        less_than=$max_extra_dmg
                    [/variable]
                    [then]
                        {VARIABLE helper_player_max_extra_dmg $max_extra_dmg}
                    [/then]
                [/if]
            [/case]
        [/switch]
    {NEXT k}
    {CLEAR_VARIABLE all_units}
    {CLEAR_VARIABLE extra_hp_points}

    [set_variable]
        name=helper_player_temp
        divide=2
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_extra_hp
        divide=2.5
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_extra_dmg
        divide=2.5
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_extra_strikes
        divide=2.5
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_total_max_hp
        divide=2
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_total_hp
        divide=2
        round=floor
    [/set_variable]
    [set_variable]
        name=helper_player_max_extra_dmg
        divide=1.5
        round=floor
    [/set_variable]

    {VARIABLE_OP gutter[0].alive_units add $helper_player_temp}
    {VARIABLE_OP gutter[1].alive_units add $helper_player_temp}
    {VARIABLE_OP gutter[0].extra_hp add $helper_player_extra_hp}
    {VARIABLE_OP gutter[1].extra_hp add $helper_player_extra_hp}
    {VARIABLE_OP gutter[0].extra_dmg add $helper_player_extra_dmg}
    {VARIABLE_OP gutter[1].extra_dmg add $helper_player_extra_dmg}
    {VARIABLE_OP gutter[0].extra_strikes add $helper_player_extra_strikes}
    {VARIABLE_OP gutter[1].extra_strikes add $helper_player_extra_strikes}
    {VARIABLE_OP gutter[0].total_max_hp add $helper_player_total_max_hp}
    {VARIABLE_OP gutter[1].total_max_hp add $helper_player_total_max_hp}
    {VARIABLE_OP gutter[0].total_hp add $helper_player_total_hp}
    {VARIABLE_OP gutter[1].total_hp add $helper_player_total_hp}
    [if]
        [variable]
            name=gutter[0].max_extra_dmg
            less_than=$helper_player_max_extra_dmg
        [/variable]
        [then]
            {VARIABLE gutter[0].max_extra_dmg $helper_player_max_extra_dmg}
        [/then]
    [/if]
    [if]
        [variable]
            name=gutter[1].max_extra_dmg
            less_than=$helper_player_max_extra_dmg
        [/variable]
        [then]
            {VARIABLE gutter[1].max_extra_dmg $helper_player_max_extra_dmg}
        [/then]
    [/if]
    {CLEAR_VARIABLE helper_player_temp}
    {CLEAR_VARIABLE helper_player_extra_hp}
    {CLEAR_VARIABLE helper_player_extra_dmg}
    {CLEAR_VARIABLE helper_player_extra_strikes}
    {CLEAR_VARIABLE helper_player_total_max_hp}
    {CLEAR_VARIABLE helper_player_total_hp}
    {CLEAR_VARIABLE helper_player_max_extra_dmg}
    {VARIABLE_OP gutter[0].alive_units add $players[0].base_alive_units}
    {VARIABLE_OP gutter[1].alive_units add $players[1].base_alive_units}

    [lua]
        code = <<
            local max_dmg = wesnoth.get_variable "gutter[0].max_extra_dmg"
            local alive = wesnoth.get_variable "gutter[0].alive_units"
            alive = alive + get_points_from_extra_dmg(max_dmg)
            wesnoth.set_variable("gutter[0].alive_units", alive)

            max_dmg = wesnoth.get_variable "gutter[1].max_extra_dmg"
            alive = wesnoth.get_variable "gutter[1].alive_units"
            alive = alive + get_points_from_extra_dmg(max_dmg)
            wesnoth.set_variable("gutter[1].alive_units", alive)

			local extra_hp, extra_dmg, extra_strikes, max_extra_dmg,
				hp_factor, hp_percentage, current_turn, unit_points,
				progress_factor, bonus_ratio, dmg_bonus, strikes_bonus,
				enemy_hp_bonus, turn_hp_bonus, handicap, points_hp_bonus

			local g = ''

			for(local i = 0; i < 2; i++)	-- replace with actual for loop

				g = "gutter[" .. i .. "]."
				extra_hp = wesnoth.get_variable(g .. "extra_hp")
				extra_dmg = wesnoth.get_variable(g .. "extra_dmg")
				extra_strikes = wesnoth.get_variable(g .. "extra_strikes")
				max_extra_dmg = wesnoth.get_variable(g .. "max_extra_dmg")
				hp_factor = wesnoth.get_variable("players[" .. i .. "].base_hp_factor")
				hp_percentage = wesnoth.get_variable(g .. "total_hp") / wesnoth.get_variable(g .. "total_max_hp")
				current_turn = wesnoth.get_variable("turn_number")
				unit_points = wesnoth.get_variable(g .. "alive_units")
				progress_factor = wesnoth.get_variable("players[" .. i .. "].progress_factor")

				bonus_ratio = get_bonus_ratio_from_max_extra_dmg(max_extra_dmg)
				dmg_bonus = get_dmg_bonus_from_extra_hp(extra_hp)
				strikes_bonus = get_strikes_bonus_from_extra_hp(extra_hp)
				enemy_hp_bonus = get_hp_bonus_from_extra_dmg(extra_dmg, extra_strikes)
				turn_hp_bonus = get_hp_bonus_from_turn_number(current_turn, progress_factor)
				handicap = get_bonus_handicap_from_hp_percentage(hp_percentage)
				points_hp_bonus = get_hp_bonus_from_unit_points(unit_points)

				dmg_bonus = dmg_bonus * bonus_ratio * handicap
				strikes_bonus = strikes_bonus * bonus_ratio * handicap
				hp_factor = hp_factor + (points_hp_bonus + enemy_hp_bonus) * bonus_ratio * handicap + turn_hp_bonus


				wesnoth.set_variable(g .. "bonus_hp", hp_factor)
				wesnoth.set_variable(g .. "bonus_dmg", dmg_bonus)
				wesnoth.set_variable(g .. "bonus_strikes", strikes_bonus)
			end
		>>
	[/lua]
#enddef
